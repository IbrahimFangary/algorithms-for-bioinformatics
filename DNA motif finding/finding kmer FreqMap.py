# Example usage
Text = "TGTCGATGGATTCACCCCCTTAACCCCCTTAATGTCGATATGCAATCTAGCCCACAATGCAATCTAGCCCACAGGATTCATGTCGATCCCCCTTAAATGCAATCTAGCCCACAATGCAATCCCCCCTTAAGGATTCACCCCCTTAATAGCCCACATAGCCCACACCCCCTTAACCCCCTTAATAGCCCACATGTCGATGGATTCACCCCCTTAACCCCCTTAAATGCAATCTGTCGATGGATTCAGGATTCAATGCAATCATGCAATCATGCAATCGGATTCACCCCCTTAATGTCGATCCCCCTTAAGGATTCACCCCCTTAAGGATTCAGGATTCATAGCCCACACCCCCTTAAATGCAATCTGTCGATGGATTCATAGCCCACAATGCAATCTGTCGATCCCCCTTAACCCCCTTAAATGCAATCCCCCCTTAATAGCCCACAATGCAATCATGCAATCTGTCGATGGATTCACCCCCTTAAATGCAATCTAGCCCACATGTCGATGGATTCATGTCGATGGATTCAATGCAATCTGTCGATCCCCCTTAACCCCCTTAATGTCGATCCCCCTTAAATGCAATCATGCAATCTAGCCCACACCCCCTTAAATGCAATCATGCAATCGGATTCATAGCCCACATAGCCCACACCCCCTTAATAGCCCACACCCCCTTAAGGATTCATAGCCCACATGTCGATTAGCCCACATAGCCCACAGGATTCAATGCAATCCCCCCTTAATAGCCCACATAGCCCACATAGCCCACATAGCCCACACCCCCTTAACCCCCTTAACCCCCTTAA"
k = 14
def FrequencyTable(Text,k):
    dic={}
    for i in range(len(Text)-k+1):
        pattern = Text[i:i+k]
        if pattern in dic:
            dic[pattern]=dic[pattern]+1 
        else:
            dic[pattern]=1
    return dic  
def BetterFrequentWords(Text, k):
    FrequentPatterns = []  # Initialize an list to store frequent patterns
    freqMap = FrequencyTable(Text, k)  # Get frequenxy table for patterns of length k
    maxCount = max(freqMap.values())  # Find the maximumm count among the patterns
    
    for Pattern, count in freqMap.items():
        if count == maxCount:
            FrequentPatterns.append(Pattern)
    
    return FrequentPatterns
print(BetterFrequentWords(Text, k))
